/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Controle;

import Modelo.Erros;
import Modelo.Tabela;
import Modelo.ModeloToken;
import Modelo.ModeloErro;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author Euliterio Maunde
 * @author ivo Mauricio
 * @author Salvador Chauque
 */
public class AnalisadorLexico {
Para mais informacoes contacte-me atravez do email: euliteriomaunde2@gmail.com ou pelo contacto telefone : 846426941

    public boolean verificacaoTotal(String string) {
        if (verificarTipoDeDado(string)) {
            this.modeloToken = new ModeloToken("Identifier Tipe", string);
            this.modeloTabela.gravarNaTabela(modeloToken);
            return true;
        } else {
            if (VerificarPalavraReservada(string)) {
                this.modeloToken = new ModeloToken("Special Symbol", string);
                this.modeloTabela.gravarNaTabela(modeloToken);
                return true;
            } else {
                if (VerificarSimboloEspescial(string)) {
                    this.modeloToken = new ModeloToken("Special Symbol", string);
                    this.modeloTabela.gravarNaTabela(modeloToken);
                    return true;
                } else {
                    if (verificaAtributo(string)) {
                        this.modeloToken = new ModeloToken("Identifier", string);
                        this.modeloTabela.gravarNaTabela(modeloToken);
                        return true;
                    } else {
                        if (this.verificaNumero(string)) {
                            this.modeloToken = new ModeloToken("Number", string);
                            this.modeloTabela.gravarNaTabela(modeloToken);
                            return true;
                        } else {
                            if (this.verificaString(string)) {
                                this.modeloToken = new ModeloToken("character constant", string);
                                this.modeloTabela.gravarNaTabela(modeloToken);
                                return true;
                            } else {
                                if (this.verifaSimboloNaPalavra(string)) {
                                    this.verificaJunto(string);
                                } else {
                                    this.modeloErros = new ModeloErro("Lexema nao esperado   ", string);
                                    erros.organizarBug(modeloErros);
                                    return false;
                                }

                            }

                        }
                    }
                }
            }
        }
        return false;
    }
     

//    public static void main(String[] args) {
//        AnalisadorLexico verificacoes = new AnalisadorLexico();
//        System.out.println(verificacoes.clean("*"));
//    }
}
